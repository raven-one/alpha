name: Deploy (ACA + MySQL) â€” Deploy-only

on:
  workflow_dispatch:
    inputs:
      rg:
        description: 'Resource Group'
        required: true
        default: 'mead-rg'
      location:
        description: 'Azure region'
        required: true
        default: 'northeurope'
      imageRef:
        description: 'Public image (e.g. avenr/aca-nginx-php:mead-sql)'
        required: true
        default: 'avenr/aca-nginx-php:mead-sql'

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Keep az + bicep fresh on the runner and ensure containerapp ext exists
      - name: Ensure latest Azure CLI + Bicep + extensions
        run: |
          set -e
          az --version
          az upgrade --yes
          az bicep install
          az bicep upgrade
          az extension add --upgrade -n containerapp || az extension update -n containerapp

      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}


      - name: Register resource providers (App, MySQL, Log Analytics)
        run: |
          set -e
          for NS in Microsoft.App Microsoft.DBforMySQL Microsoft.OperationalInsights; do
            echo "Registering $NS..."
            az provider register --namespace $NS --wait
            echo -n "$NS state: "
            az provider show --namespace $NS --query "registrationState" -o tsv
          done




      - name: Ensure Resource Group
        run: az group create -n ${{ github.event.inputs.rg }} -l ${{ github.event.inputs.location }} --only-show-errors -o none

      - name: Deploy Bicep (MySQL + ACA)
        shell: bash
        env:
          RG: ${{ github.event.inputs.rg }}
          LOC: ${{ github.event.inputs.location }}
          IMG: ${{ github.event.inputs.imageRef }}
          DBU: ${{ secrets.DB_ADMIN_USER }}
          DBP: ${{ secrets.DB_ADMIN_PASSWORD }}
        run: |
          set +e
          az deployment group create -g "$RG" \
            --name "run-${{ github.run_id }}" \
            -f infra/main.bicep \
            -p location="$LOC" \
               namePrefix=mead \
               containerImage="$IMG" \
               dbAdminUser="$DBU" \
               dbAdminPassword="$DBP" \
               dbName='contactforms' \
               allowAllIps=true \
            --only-show-errors -o none
          DEPLOY_RC=$?
          set -e

          echo "Deployment exit code: $DEPLOY_RC (ignoring if resources exist)"

          # Verify resources actually exist; these will fail if not created
          az mysql flexible-server show -g "$RG" -n mead-mysql -o none
          az containerapp show -g "$RG" -n mead-app -o none

          if [ "$DEPLOY_RC" -ne 0 ]; then
            echo "NOTE: CLI returned non-zero but resources are present (known az bug). Continuing."
          fi

      - name: Show outputs
        run: |
          set -e
          APP_FQDN=$(az containerapp show -g ${{ github.event.inputs.rg }} -n mead-app --query "properties.configuration.ingress.fqdn" -o tsv)
          MYSQL_FQDN=$(az mysql flexible-server show -g ${{ github.event.inputs.rg }} -n mead-mysql --query fullyQualifiedDomainName -o tsv)
          echo "App: https://${APP_FQDN}"
          echo "DB:  ${MYSQL_FQDN}"
          {
            echo "### Deployment outputs"
            echo ""
            echo "- **App**: https://${APP_FQDN}"
            echo "- **DB**:  ${MYSQL_FQDN}"
          } >> "$GITHUB_STEP_SUMMARY"
